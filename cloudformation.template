AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Algolia DynamoDB table'

Parameters:
  Env:
    Type: String
    Default: prd
    Description: Environment name for the resources
  S3BucketName:
    Type: String
    Description: S3 bucket containing all deployment artifacts
  S3KeyPrefix:
    Type: String
    Description: S3 key prefix for deployment artifacts (e.g., site-letmevibethatforyou/1.0.0)
  Version:
    Type: String
    Description: Version string for deployment packages (e.g., 20240102-1430)
  AlgoliaSecretArn:
    Type: String
    Description: ARN of the AWS Secrets Manager secret containing Algolia credentials

Resources:
  AlgoliaTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: AlgoliaTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      DeletionProtectionEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: Name
          Value: AlgoliaTable
        - Key: Environment
          Value: !Ref Env

  TriggerAlgoliaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBStreamAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource: !GetAtt AlgoliaTable.StreamArn
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::Account}:secret:${Env}/algolia*'
      Tags:
        - Key: Name
          Value: TriggerAlgoliaFunctionRole
        - Key: Environment
          Value: !Ref Env

  TriggerAlgoliaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${Env}-trigger-algolia'
      Runtime: provided.al2023
      Handler: bootstrap
      Role: !GetAtt TriggerAlgoliaFunctionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Sub '${S3KeyPrefix}trigger-algolia.zip'
      Environment:
        Variables:
          TABLE_NAME: !Ref AlgoliaTable
          ALGOLIA_SECRET_ARN: !Ref AlgoliaSecretArn
      Timeout: 60
      MemorySize: 128
      Tags:
        - Key: Name
          Value: !Sub '${Env}-trigger-algolia'
        - Key: Environment
          Value: !Ref Env

  TriggerAlgoliaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt AlgoliaTable.StreamArn
      FunctionName: !Ref TriggerAlgoliaFunction
      StartingPosition: TRIM_HORIZON
      BatchSize: 10
      MaximumBatchingWindowInSeconds: 5
      ParallelizationFactor: 1

Outputs:
  TableName:
    Description: Name of the DynamoDB table
    Value: !Ref AlgoliaTable
    Export:
      Name: !Sub '${AWS::StackName}-AlgoliaTableName'
  TableArn:
    Description: ARN of the DynamoDB table
    Value: !GetAtt AlgoliaTable.Arn
    Export:
      Name: !Sub '${AWS::StackName}-AlgoliaTableArn'
  TableStreamArn:
    Description: ARN of the DynamoDB table stream
    Value: !GetAtt AlgoliaTable.StreamArn
    Export:
      Name: !Sub '${AWS::StackName}-AlgoliaTableStreamArn'
  TriggerAlgoliaFunctionArn:
    Description: ARN of the trigger-algolia Lambda function
    Value: !GetAtt TriggerAlgoliaFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-TriggerAlgoliaFunctionArn'
